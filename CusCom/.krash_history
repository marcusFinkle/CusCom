nano saveHSPlace
./saveHSPlace 004307
cd /media/kenny-ray/EXT\ SPACE/
nano Homestuck.desktop 
exit
cd Desktop/
nano MS\ Paint\ Adventures.desktop 
exit
nano coolStuff
chmod +x coolStuff 
./coolStuff 
echo -n "hello"
./coolStuff 
nano coolStuff
./coolStuff 
nano coolStuff
echo -n "Hello" && echo -n " there"
echo --help
man echo
cd /media/kenny-ray/EXT\ SPACE/
dir
nano New-Ubuntu-Install.sh
cd
nano coolStuff 
./coolStuff
man echo
./coolStuff
sudo apt-get purge emacs
sudo apt-get purge emacs*
sudo apt-get purge *emacs*
./coolStuff
sudo xhost +SI:localuser:lightdm
sudo su lightdm -s /bin/bash gsettings set com.canonical.unity-greeter draw-grid false
sudo gsettings
sudo su lightdm -s /bin/bash gsettings set com.canonical.unity-greeter draw-grid false
sudo su lightdm -s /bin/bash
sudo su lightdm -s /bin/bash gsettings set com.canonical.unity-greeter draw-grid false
sudo su lightdm  gsettings set com.canonical.unity-greeter draw-grid false
sudo su lightdm gsettings set com.canonical.unity-greeter draw-grid false
if [ $release -eq "Codename:natty" ]; then version="11.04"; elif [ $release -eq "Codename:oneiric" ]; then version="11.10"; elif [ $release -eq "Codename:precise" ]; then version="12.04"; elif [ $release -eq "Codename:quantal" ]; then version="12.10"; elif [ $release -eq "Codename:raring" ]; then version="13.04"; elif [ $release -eq "Codename:saucy" ]; then version="13.10"; elif [ $release -eq "Codename:trusty" ]; then version="14.04"; elif [ $release -eq "Codename:utopic" ]; then version="14.10"; elif [ $release -eq "Codename:vivid" ]; then version="15.04"; elif [ $release -eq "Codename:wily" ]; then version="15.10"; elif [ $release -eq "Codename:xenial" ]; then version="16.04"; elif [ $release -eq "Codename:yakkety" ]; then version="16.10"; elif [ $release -eq "Codename:zesty" ]; then version="17.04"; else version=unknown; fi
if [ $release -ne "unknown" ]; then os=Ubuntu $version; else os=unknown; fi
echo "Detected OS: $os"
if [ $release == "Codename:natty" ]; then version="11.04"; elif [ $release == "Codename:oneiric" ]; then version="11.10"; elif [ $release == "Codename:precise" ]; then version="12.04"; elif [ $release == "Codename:quantal" ]; then version="12.10"; elif [ $release == "Codename:raring" ]; then version="13.04"; elif [ $release == "Codename:saucy" ]; then version="13.10"; elif [ $release == "Codename:trusty" ]; then version="14.04"; elif [ $release == "Codename:utopic" ]; then version="14.10"; elif [ $release == "Codename:vivid" ]; then version="15.04"; elif [ $release == "Codename:wily" ]; then version="15.10"; elif [ $release == "Codename:xenial" ]; then version="16.04"; elif [ $release == "Codename:yakkety" ]; then version="16.10"; elif [ $release == "Codename:zesty" ]; then version="17.04"; else version=unknown; fi
if [ $release -ne "unknown" ]; then os=Ubuntu $version; else os=unknown; fi
echo "Detected OS: $os"
if [ $release === "Codename:natty" ]; then version="11.04"; elif [ $release === "Codename:oneiric" ]; then version="11.10"; elif [ $release === "Codename:precise" ]; then version="12.04"; elif [ $release === "Codename:quantal" ]; then version="12.10"; elif [ $release === "Codename:raring" ]; then version="13.04"; elif [ $release === "Codename:saucy" ]; then version="13.10"; elif [ $release === "Codename:trusty" ]; then version="14.04"; elif [ $release === "Codename:utopic" ]; then version="14.10"; elif [ $release === "Codename:vivid" ]; then version="15.04"; elif [ $release === "Codename:wily" ]; then version="15.10"; elif [ $release === "Codename:xenial" ]; then version="16.04"; elif [ $release === "Codename:yakkety" ]; then version="16.10"; elif [ $release === "Codename:zesty" ]; then version="17.04"; else version=unknown; fi
if [ $release -ne "unknown" ]; then os=Ubuntu $version; else os=unknown; fi
echo "Detected OS: $os"
if [ $release = "Codename:natty" ]; then version="11.04"; elif [ $release = "Codename:oneiric" ]; then version="11.10"; elif [ $release = "Codename:precise" ]; then version="12.04"; elif [ $release = "Codename:quantal" ]; then version="12.10"; elif [ $release = "Codename:raring" ]; then version="13.04"; elif [ $release = "Codename:saucy" ]; then version="13.10"; elif [ $release = "Codename:trusty" ]; then version="14.04"; elif [ $release = "Codename:utopic" ]; then version="14.10"; elif [ $release = "Codename:vivid" ]; then version="15.04"; elif [ $release = "Codename:wily" ]; then version="15.10"; elif [ $release = "Codename:xenial" ]; then version="16.04"; elif [ $release = "Codename:yakkety" ]; then version="16.10"; elif [ $release = "Codename:zesty" ]; then version="17.04"; else version=unknown; fi
if [ $release -ne "unknown" ]; then os=Ubuntu $version; else os=unknown; fi
echo "Detected OS: $os"
./Compile_KA_JS.sh /media/kenny-ray/EXT\ SPACE/Animation.js.txt 
exit
nano /media/kenny-ray/EXT\ SPACE/Animation.js.txt 
./Compile_KA_JS.sh /media/kenny-ray/EXT\ SPACE/Animation.js.txt 
exit
sudo modprobe b43
exit
nano /media/kenny-ray/EXT\ SPACE/Animation.js.txt 
./Compile_KA_JS.sh /media/kenny-ray/EXT\ SPACE/Animation.js.txt 
nano /media/kenny-ray/EXT\ SPACE/Animation.js.txt 
./Compile_KA_JS.sh /media/kenny-ray/EXT\ SPACE/Animation.js.txt 
nano Compile_KA_JS.sh
cmatrix
xscreensaver
sudo apt-get install xscreensaver xscreensaver-*
sudo apt-get install xscreensaver xscreensaver-* dizzy
sudo apt-get install xscreensaver xscreensaver-* dizzy libopengl-perl
sudo apt-get install xscreensaver xscreensaver-dat* xscreensaver-g* xscreensaver-screensaver-bsod
sudo apt-get install xscreensaver xscreensaver-dat* xscreensaver-screensaver-bsod
xscreensavwer
xscreensaver
xscreensaver-demo 
exit
nettest
nano nettest
nano ./CusCom/nettest
nettest
exit
sudo apt-get install xbindkeys
sudo su
sudo modprobe b43
sudo apt-get install xbindkeys
ping 8.8.8.8
ping localhost
ping 10.201.207.150
ping 10.201.207.151
sudo gnome-session-properties 
exit
xbindkeys --defaults > /home/kenny-ray/.xbindkeysrc
sudo apt-get install xvkbd 
nano .xbindkeysrc 
xbindkeys-config 
nano tempFile.tmp
exit
sudo apt-get install xbindkeys
sudo apt-get install xbindkeys-config && sudo apt-get autoremove
gedit /media/kenny-ray/EXT\ SPACE/Missing_Keys
exit
man read
read --help
read n 1 $potato
read -n 1 $potato
[A
read -n 1 $potato
echo $potato
echo 
read -n 1 potato
echo $potato
exit
swap
mount
swapon
swapon -a
swapon
mount
sudo swapon -a
mount
exit
# Determine OS release:
# Natty is the oldest I have still seen in use.
if [ "$release" = "Codename:natty" ]; then version="11.04"; elif [ "$release" = "Codename:oneiric" ]; then version="11.10"; elif [ "$release" = "Codename:precise" ]; then version="12.04"; elif [ "$release" = "Codename:quantal" ]; then version="12.10"; elif [ "$release" = "Codename:raring" ]; then version="13.04"; elif [ "$release" = "Codename:saucy" ]; then version="13.10"; elif [ "$release" = "Codename:trusty" ]; then version="14.04"; elif [ "$release" = "Codename:utopic" ]; then version="14.10"; elif [ "$release" = "Codename:vivid" ]; then version="15.04"; elif [ "$release" = "Codename:wily" ]; then version="15.10"; elif [ "$release" = "Codename:xenial" ]; then version="16.04"; elif [ "$release" = "Codename:yakkety" ]; then version="16.10"; elif [ "$release" = "Codename:zesty" ]; then version="17.04"; else version=unknown; fi
echo $version $release
wget -O nativefier.zip https://github.com/jiahaog/nativefier/archive/development.zip
tar
unzip
unzip nativefier.zip 
nautilus
sudo apt-get update
exit
nativefier-development
cd nativefier-development/
sudo apt-get install firmware-b43-lpphy-installer
exit
sudo npm install nativefier -g
killall thunderbird 
sudo npm install nativefier -g
cd
nativefier --help
nativefier help
nativefier "www.mspaintadventures.com"
cd
sudo ln -s /usr/bin/nodejs /usr/bin/node
nativefier "www.mspaintadventures.com"
nativefier --help
sudo npm --help
sudo npm uninstall nativefier
sudo npm remove nativefier
exi
exit
which node
which nodejs
which nodejsf
which nod
which no
which n
*
which *n
which n*
./*
sudo chmod +x *
./*
exit
dir
nano README.md 
npm install nativefier 
sudo apt-get install npm
nano README.md 
npm install nativefier -g
cd
npm install nativefier -g
sudo apt-get install nodejs
sudo apt-get install nodejs*
sudo apt-get install linux-firmware-nonfree 
sudo apt-get install nodejs*
sudo apt-get purge firmware-b43-installer b43-fwcutter linux-firmware-nonfree 
sudo apt-get purge firmware-b43-installer b43-fwcutter linux-firmware-nonfree  bcmwl-kernel-source 
sudo modprobe -r b43
sudo apt-get purge firmware-b43-installer b43-fwcutter linux-firmware-nonfree  bcmwl-kernel-source 
sudo modprobe b43
sudo apt-get purge b43
sudo apt-get install firmware-b43-installer b43-fwcutter linux-firmware-nonfree  bcmwl-kernel-source 
sudo apt-get purge firmware-b43-installer b43-fwcutter linux-firmware-nonfree  bcmwl-kernel-source 
sudo apt-get install firmware-b43-installer:i386 b43-fwcutter:i386 linux-firmware-nonfree:i386 bcmwl-kernel-source:i386 
exit
which nativefier
sudo rm -r $(which nativefier)
exit
sudo modprobe b43
exit
sudo add-apt-repository ppa:loneowais/fogger
nano /etc/apt/sources.list.d/loneowais-fogger-trusty.list 
fogger
sudo apt-get updaate
sudo apt-get update
sudo apt-get install fogger
fogger
sudo apt-get purge fogger
sudo apt-get purge fogger && sudo apt-get autremove
sudo apt-get purge fogger && sudo apt-get autoremove
exit
rm -r nativefier*
sudo apt purge nativefier
sudo apt-get purge nativefier
gedit /home/kenny-ray/Desktop/Homestuck.desktop 
nettest
exit
echo -en '\e[7l\e[2J\e[?25l'
exit
function put_cursor() { echo -en "\e[${1};${2}f"; }
put_cursor 1 1
potato
clear
cls
clear
nano .aliases
./.aliases
source .aliases
clear
function put_cursor() { echo -en "\e[${1};${2}f"; }
put_cursor 10,20
put_cursor 10 20
cool
exit
xbindkeys --help
xbindkeys -s
killall xbindkeys 
xbindkeys 
xbindkeys-config 
xbindkeys 
nano .aliases
source .aliases
trigger
triggered
while true; do nettest; done
chmod +x bash_game 
./bash_game 
nano bash_game 
./bash_game 
nano bash_game 
./bash_game 
[A
./bash_game 
nano bash_game 
gedit bash_game 
sudo nano /etc/fstab
sudo nano /etc/tab
sudo nano /etc/mtab
udisksctl 
umount /dev/mmcblk0p4
mount /dev/mmcblk0p4
udisksctl 
sudo nano /etc/mtab
udisksctl 
udisks mount 
udisksctl mount 
udisksctl mount -p /dev/mmcblk0p4
sudo mount -o user,exec /dev/mmcblk0p4 /media/kenny-ray/EXT-SPACE
sudo mount -o user,exec /dev/mmcblk0p4 /media/kenny-ray/EXTSPACE
sudo mount -o user,exec /dev/mmcblk0p4 /media/kenny-ray/EXT SPACE
sudo mount -o user,exec /dev/mmcblk0p4 /media/kenny-ray/EXT\ SPACE
rm -f files
exit
find . -name '*~' -delete
cd /
find . -name '*~' -delete
cd
rm *~
exit
./Desktop/Send_TPOD.sh 
echo $?
./Desktop/Send_TPOD.sh 
exit
mkdir fakeUpdate
mv win*.html ~/fakeUpdate/
dir 
./InstallGeoIPData 
rm Geo*.dat
dir
mkdir beepMusic
mv Star_Wars.beep beepMusic/
mv Tetris.beep beep beepMusic/
mv Tetris.beep beepMusic/
dir
mv Axel_F.beep beepMusic/
mv *.beep beepMusic/
dir
mkdir driveSpeed
mv *_hdparm driveSpeed/
dir
rm dead.letter 
rm selections.txt 
rm tor-browser-linux32-6.5.1_en-US.tar.xz 
rm Missing_Keys 
rm Reboot_WiFi.sh 
dir
nano cHSP 
mkdir DDoS
dir
mkdir DDOS
mv DDo* DDOS/
mv DDOS DDoS
dir
nano driveSpeed/
ls
ls -A
nano .xbindkeys_config/
cd .xbindkeys_config/
dir
nano speed_c/.xbindkeysrc
xbindkeys
xbindkeys --help
cd
xbindkeys -f .xbindkeys_config/speed_c/.xbindkeysrc 
killall xbindkeys 
xbindkeys -f .xbindkeys_config/speed_c/.xbindkeysrc 
killall xbindkeys 
xbindkeys-config 
xbindkeys
xbindkeys --help
xbindkeys -v
xbindkeys-config 
xbindkeys -v
xbindkeys --help
xbindkeys -dg
xbindkeys -dg > .xbindkeysrc.scm
xbindkeys -v
killall xbindkeys 
xbindkeys -v
killall xbindkeys 
xbindkeys -v
xbindkeys-config 
xbindkeys --help
xbindkeys -mk
xbindkeys --help
xbindkeys -p
xbindkeys -pv
xbindkeys -p -v
sudo shutdown -h 000
xxd
xxd --help
xxd -r -p hacking.sh hacking.bin
hexdump hacking.bin
hexdump --help
man hexdump
hexdump -Chacking.bin
hexdump -C hacking.bin
hexdump -c hacking.bin
cat hacking.bin 
cat hacking.sh
hexdump -C hacking.sh
./hacking.sh 
xxd -r -p hacking.sh hacking.bin
./hacking.sh 
cat hacking.bin 
xbindkeys
exit
sleep 15
bg
exit
xbindkeys -mk
rm .xbindkeysrc.scm 
killall xbindkeys
xbindkeys -v
xbindkeys 
detach
pdetach
sleep 10
g
jobs
bash
exit
dir
gedit --help
gedit hacking.sh 
bg
jobs
exit
exir
exit
aliases
nano /media/kenny-ray/EXT\ SPACE/aliases
exit
sudo apt-get update && sudo apt-get upgrade
sudo apt-get upgrade
sudo apt-get install firefox firefox-locale-en liboxideqt-qmlplugin liboxideqtcore0 liboxideqtquick0 libpam-smbpass libsmbclient libwbclient0 linux-generic-lts-xenial linux-headers-generic-lts-xenial linux-image-generic-lts-xenial makedev oxideqt-codecs-extra python-samba samba samba-common samba-common-bin samba-dsdb-modules samba-libs samba-vfs-modules smbclient
sudo apt-get install samba
nettest
sudo apt-get remove -y samba && sudo apt-get install -y samba
sudo apt-get remove -y samba && sudo apt-get install --force-yes samba
sudo apt-get -y autoremove
exit
dir
cd Desktop/
./Send_TPOD.sh 
exit
killall firefox 
exit
cdc /media/kenny-ray/Debian\ Jessie/
cd /media/kenny-ray/Debian\ Jessie/
dir
cd
exit
gksudo --help
sudo swapoff
sudo swapoff -a
exit
killall gpartedbin 
sudo killall gpartedbin 
exit
fat
fsck.fat
fsck.fat -a -v /dev/mmcblk0p4
sudo fsck.fat -a -w -v /dev/mmcblk0p4
sudo swapoff -a
sudo apt-get install unix-privesc-check
sudo apt-get install privesc-check
exit
sudo modprobe -r b43
sudo modprobe b43
exit
nano .aliases 
source .alaises
source .aliases
InstallGeoIPData 
dir
cd CusCom/
nano InstallGeoIPData 
mkdir --help
nano InstallGeoIPData 
cd
dir
rm GeoIP.dat.gz
rm GeoIP.dat.gz.1 
InstallGeoIPData 
nano networkDiagnostic
sudo apt-get install apache
sudo apt-get install apache2
sudo apt-get autoclean
sudo apt-get install
systemctl status smbd.service
system status smbd.service
systemcli status smbd.service
systemctl status smbd.service
journalctl -xn
nano /etc/samba/smb.conf 
rm /etc/samba/smb.conf 
sudo rm /etc/samba/smb.conf 
sudo apt-get install
sudo rm /etc/samba
sudo rm -r /etc/samba
sudo apt-get install
nano /etc/samba/smb.conf 
sudo apt-get install samba
sudo nano /etc/apache2/
cd /etc/apache2
dir
nano apache2.conf 
sudo nano apache2.conf 
sudo su
nettest
ping google.com
ping www.google.us
ping www.google.us"
"
ping "www.google.us"
ping 8.8.8.8
nettest
sudo service networking stop
sudo service --help
sudo man service
ls /etc/init.d
ls /etc/init.d/networking
ls /etc/init.d/networking/
nano /etc/init.d/networking 
sudo nano /etc/init.d/networking 
sudo service networking stop
sudo nano /etc/init.d/networking 
sudo service networking start
/etc/init.d/networking 
/etc/init.d/networking force-reload
/etc/init.d/networking reload
/etc/init.d/networking stop
/etc/init.d/networking start
exit
ifconfig
cd /var/www/html/
dir
mv index.html index.html.default
sudo mv index.html index.html.default
dir
nano index.html
sudo su
exit
nano .Xauthority 
export XAUTHORITY=~/Xauthority
sudo nautilus
XAUTHORITY=~/Xauthority
nano .bashrc
xhist si:localuser:kenny-ray
xhost si:localuser:kenny-ray
xhost si:localuser:root
sudo nautilus
cd /var/www
dir
mkdir html2
sudo mkdir html2
sudo mv index.html html2/
cd html2
dir
sudo nano /etc/dhcp/dhclient.conf 
touch main.css
sudo touch main.css
gksudo gedit main.css
gksudo gedit
sudo gedit
sudo nautilus
xdisplay
display
gksudo nautilus .
bg
jobs
disown %1
sudo nano /etc/hosts
gksudo gedit /var/www/html2/index.html
gksudo gedit
bg
disown %1
exit
sudo su
rxot
exit
sudo su
cd
./saveHSPlace 004367
./saveHSPlace 004430
./saveHSPlace 004434
exit
xbindkeys
exit'
'
exit'
exit
nano infAddInc
chmod +x infAddInc 
./inf
./infAddInc 
chmod +x infAddInc 
nano infAddInc
./infAddInc 
nano infAddInc
./infAddInc 
nano infAddInc
./infAddInc 
nano infAddInc
./infAddInc 
nano infAddInc
./infAddInc 
nano infAddInc
./infAddInc 
nano infAddInc
./infAddInc 
nano infAddInc
./infAddInc 
nano infAddInc
./infAddInc 
mvprintw 0 0 $'\x1b[2J'
./infAddInc 
mvprintw 0 0 $'\x1b[2J'
echo $'\x1b[2J'
echo -ne \x1b[2J
echo -ne '\x1b[2J'
echo -ne $'\x1b[2J'
echx1b[2J'
'; '
'; '
"
""
shoot
what have I done
echx
exit
nano update-boot
mv update-boot CusCom/
nano .aliases 
source .aliases 
exit
sudo mv /sbin/btrfs /sbin/btrfs.save
sudo update-initramfs -u
sudo mv /sbin/btrfs.save /sbin/btrfs
sudo apt-get purge btrfs-tools
sudo service smbd start
sudo service smbd stop
sudo apt-get purge samba
sudo apt-get autoremove
sudo update-boot
source .aliases 
sudo update-boot
sudo -E update-boot
sudo --help
nano .aliases 
source .aliases 
sudo update-boot
cd Co
cd CusCom/
dir
chmod +x *
cd
nano .aliases 
source .aliases 
sudo update-boot
nano  update-boot
cd CusCom/
nano update-boot 
cd
sudo update-boot
yay
beep
sudo apt-get install beep
beep
killall bash
exit
sshd
sudo apt-get install openssh-server
sudo modprobe pcspkr
beep
while true; do beep; done
killall beep
killall bash
killall while
killall beep
killall dash
bash
killall bash
killall sh
killall *sh
sudo reboot
nano .aliases
source .aliases
cnano remove-old-kernels
nano .alaises
nano .aliases
cnanoremove-old-kernels
nano .aliases
killall nano
nano .aliases
soalias
nano .aliases
soalias
cnano remove-old-kernels
nano /etc/bash_completion
nano /usr/share/bash-completion/bash_completion 
sudo nano 
complete -p
sudo nano /etc/bash_completion.d/CusCom
exit
sudo nano /etc/default/burg 
sudo burg-emu
sudo apt-get autoremove
sudo remove-old-kernels 
nano remove-old-kernels
nano .aliases
cnano remove-old-kernels
nano .aliases
source .aliases
cnano remove-old-kernels
remove-old-kernels 
sudo apt-get purge linux-image-4.4.0-70-generic linux-image-extra-4.4.0-70-generic 
sudo update-boot
unalias sudo
sudo  remove-old-kernels
sudo   remove-old-kernels
soalias
sudo remove-old-kernels
nano --help
soalias
cnano remove-old-kernels
cd
sudo reboot
nano .inputrc
nano /etc/inputrc
man nano
pico
nano .bashrc
nano $SYSTEMCONFDIR/.nanorc
echo $SYSTEM
xscreensaver
xscreensaver-demo
bg
disown %1
nano .xscreensaver 
sudo apt-get install xscreensaver-data*
sudo apt-get install xscreensaver-gl
sudo apt-get install xscreensaver-gl-extra
sudo baobab
bg
disown %1
sudo apt-get install xscreensaver-screensaver-webcollage 
df -h
cd CusCo
cd CusCom
nano diskUsage
cd
df -h
exit
nano .aliases
soalias
edalias
soalias
unalias diskUsage
unalias disk*
unalias diskusage 
unalias disk-usage 
soalias
diskusage 
cnano diskusage
df --help
cnano diskusage
df -h
cnano diskusage
df
lsblk
lsblk --help
lsblk -fs
lsblk --fs
swapon -a
lsblk --fs
sudo swapon -a
lsblk --fs
exit
echo $SHELL
sh
krash
crash
killall killall
clear
nano infAddInc
./infAddInc
nano infAddInc
./infAddInc
cursor
help 
exit
nano infAddInc
./infAddInc
exit
sudo nano /etc/modules
sudo nano /etc/modprobe.d/blacklist.conf 
sudo nano /etc/modules
exity
exit
gnome-session-properties 
kbindkeys_autostart --help
xbindkeys_autostart --help
man xbindkeys_autostart
killall xbindkeys 
xbindkeys -v
xbindkeys
gedit CusCom/krash
bg
disown %1
xbindkeys-config 
exit
command -v sudo
command -v nano
command -v pot
echo $?
command -v sudo
echo $?
xbindkeys -v
xbindkeys-config 
xkbprint 
exit
xbindkeys
xbindkeys -v
xbindkeys-config 
xbindkeys -v
echo $?
sudo xbindkeys
sudo xbindkeys -v
xbindkeys-config 
sudo xbindkeys -v
nano .xbindkeysrc 
sudo xbindkeys -v
xbindkeys -v
xvkbd 
xvkbd --help
man xvkbd --help
xbindkeys
xbindkeys-config 
bg
disown %1
cp .xbindkeysrc .xbindkeysrc.bkup
xbindkeys-config 
xbindkeys -v
nano .xbindkeys
nano .xbindkeysrc
xbindkeys -v
mv .xbindkeysrc .xbindkeysrc.old
mv .xbindkeysrc.bkup .xbindkeysrc
mc 
man mc
baby
command_not_found_handle 
command_not_found_handle --help
command_not_found_handle
command_not_found_handle sudo
command_not_found_handle sudo 
command_not_found_handle nano
xbindkeys
xbindkeys -v
nano .xbindkeysrc
xbindkeys -v
nano .xbindkeysrc
xbindkeys
xbindkeys -v
nano .xbindkeysrc
xbindkeys -v
nano .xbindkeysrc
echo $USER
hostname
echo $USER@$(hostname)
echo $USER@$(hostname):
echo $USER@$(hostname):$PWD
$HOME
kras
krash
nano .aliases
krash
soalias
krash
killall firefox
killall tor
killall firefox
command
command -v
command -v sudo 
command sudo 
krash
echo $PWD
echo $HOME
if [ '$PWD' = '$HOME' ]; then echo "YAY"; else echo ":("; fi
killall firefox 
krash
touch .krashrc
krash
com
com=echo "Hello"
com='echo "Hello"'
echo $com
$com
krash
command -v $CurCom > /dev/null
echo $?
command -v $CurCom > /dev/null
krash
man read
read --help
read -i potato CurCom
echo $CurCom
read -e
echo $CurCom
read -e CurCom
echo $CurCom
krash
command
command -v help
command -v exit
command -v sudo
krash
killall firefox
krash
command_not_found_handle 
krash
command_not_found_handle 
command_not_found_handle $curcom
command_not_found_handle sudo
command_not_found_handle mc
krash
command command_not_found_handle 
command_not_found_handle
man operator 
nano .bashrc 
krash
fg
cls
clear
cls
nano .aliases
cls
clear
. .aliases
cls
clear
cls
/usr/bin/comm
exit
command-not-found
command-not-found sudo
command-not-found
sudo apt-get install command-not-found
command_not_found_handle
command command_not_found_handle
command -v command_not_found_handle
command sudo
command -v sudo
command-not-found-data
command_not_found_handle
command_not_found_handle --help
/usr/lib/command-not-found
/usr/lib/command-not-found sudo
/usr/lib/command-not-found mc
krash
nano .bashrc
dirs -0
cd CusCOm
dirs -0
dirs
dirs --help
dirs -c
dirs -l
dirs -p
dirs -v
dirs -0
dirs -1
dirs -3
dirs -2
echo ${PWD/#$HOME/'~'}
cd CusCom
echo ${PWD/#$HOME/'~'}
dirs -0
dirs
nano krash
dirs
krash
read -r -e -d
read -r -e -dwhile IFS="" read -r -e -d $'\n' -p 'input> ' line; do 

done
Potato
krash
history --help
man history
history -anrw .krash_history 
history -a .krash_history 
history -n .krash_history 
history -r .krash_history 
exit
cd
cd
potato
mc
command-not-found
command-not-found sudo
command-not-found
sudo apt-get install command-not-found
command_not_found_handle
command command_not_found_handle
command -v command_not_found_handle
command sudo
command -v sudo
command-not-found-data
command_not_found_handle
command_not_found_handle --help
/usr/lib/command-not-found
/usr/lib/command-not-found sudo
/usr/lib/command-not-found mc
krash
nano .bashrc
dirs -0
cd CusCOm
dirs -0
dirs
dirs --help
dirs -c
dirs -l
dirs -p
dirs -v
dirs -0
dirs -1
dirs -3
dirs -2
echo ${PWD/#$HOME/'~'}
cd CusCom
echo ${PWD/#$HOME/'~'}
dirs -0
dirs
nano krash
dirs
krash
read -r -e -d
read -r -e -dwhile IFS="" read -r -e -d $'\n' -p 'input> ' line; do 
done
Potato
krash
history --help
man history
history -anrw .krash_history 
history -a .krash_history 
history -w .krash_history 
help

help
hel
help history
history
$0
echo $0
echo $0
echo $1
echo $0
echo $0
history --help
help history
echo $0
exit
echo $0
exit
echo $0
exit
echo $0
